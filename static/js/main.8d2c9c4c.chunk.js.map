{"version":3,"sources":["PostsContext.js","components/PostProvider.js","useJsonFetch.js","components/Posts.js","components/NewPost.js","components/ItemPost.js","components/ChangePost.js","App.js","index.js"],"names":["PostsContext","createContext","PostProvider","props","url","useState","advanced","setAdvanced","posts","setPosts","Provider","value","children","useJsonFetch","setValue","data","setData","loading","setLoading","useEffect","a","method","headers","body","fetch","response","ok","console","log","status","setError","statusText","resolve","json","fetchData","Posts","useContext","setRequest","className","to","map","o","id","key","moment","created","fromNow","content","NewPost","history","goBack","onClick","onSubmit","evt","preventDefault","JSON","stringify","name","onChange","target","type","ItemPost","match","Number","params","itemPost","find","push","ChangePost","prevPost","App","process","path","component","ReactDOM","render","document","getElementById"],"mappings":"yOAIeA,EAFMC,wBAAc,ICCpB,SAASC,EAAaC,GAAQ,IACnCC,EAAQD,EAARC,IADkC,EAEVC,oBAAS,GAFC,mBAEnCC,EAFmC,KAEzBC,EAFyB,OAGhBF,mBAAS,IAHO,mBAGnCG,EAHmC,KAG5BC,EAH4B,KAK1C,OACE,kBAAC,EAAaC,SAAd,CAAuBC,MAAO,CAACL,WAAUC,cAAaC,QAAOC,WAAUL,QACpED,EAAMS,U,4CCRE,SAASC,IAAgB,IAAD,EACXR,qBADW,mBAC9BM,EAD8B,KACvBG,EADuB,OAEbT,qBAFa,mBAE9BU,EAF8B,KAExBC,EAFwB,OAGPX,oBAAS,GAHF,mBAG9BY,EAH8B,KAGrBC,EAHqB,KAiDrC,OA5CAC,qBAAU,WAqCJR,GApCW,uCAAG,sCAAAS,EAAA,6DAChBF,GAAW,GADK,SAGNd,EAA+BO,EAA/BP,IAAKiB,EAA0BV,EAA1BU,OAAQC,EAAkBX,EAAlBW,QAASC,EAASZ,EAATY,KAHhB,SAISC,MAAMpB,EAAK,CAChCiB,SACAC,UACAC,SAPY,WAIRE,EAJQ,QAUAC,KACZC,QAAQC,IAAIH,EAASI,OAAQJ,EAASF,MAEtCO,SAASL,EAASM,aAGI,MAApBN,EAASI,OAhBC,iBAiBZb,EAAQ,CACNgB,QAAS,GACTH,OAAQJ,EAASI,SAnBP,yCAsBUJ,EAASQ,OAtBnB,QAsBND,EAtBM,OAuBZL,QAAQC,IAAII,GACZhB,EAAQ,CACNgB,UACAH,OAAQJ,EAASI,SA1BP,0DA8BdF,QAAQC,IAAR,MA9Bc,yBAgCdV,GAAW,GAhCG,6EAAH,oDAqCbgB,GAEFP,QAAQC,IAAIb,KAEX,CAACJ,IAEG,CAACA,EAAOG,EAAUC,EAAME,GC5ClB,SAASkB,EAAMhC,GAAQ,IAAD,EACqBiC,qBAAWpC,GAApCI,GADI,EAC3BE,SAD2B,EACjBC,YADiB,EACJH,KAAYK,GADR,EACCD,MADD,EACQC,UADR,EAECI,IAFD,mBAEnBwB,GAFmB,WAEPtB,EAFO,KAkBnC,OAdAI,qBAAU,WACHJ,GACHsB,EAAW,CACTjC,IAAI,GAAD,OAAKA,EAAL,SACHiB,OAAQ,QAIRN,GACFN,EAASM,EAAKiB,WAGf,CAACjB,IAGF,6BACE,yBAAKuB,UAAU,YACb,kBAAC,IAAD,CAAMC,GAAG,aAAaD,UAAU,UAAhC,gBAEDvB,GAAQA,EAAKiB,QAAQQ,KAAI,SAACC,GAAD,OACxB,kBAAC,IAAD,CAAMF,GAAE,iBAAYE,EAAEC,KACpB,yBAAKJ,UAAU,YAAYK,IAAKF,EAAEC,IAChC,yBAAKJ,UAAU,oBACb,yBAAKA,UAAU,kBACb,0BAAMA,UAAU,QAAhB,UACA,0BAAMA,UAAU,QAAQM,IAAOH,EAAEI,SAASC,aAG9C,yBAAKR,UAAU,qBACb,2BAAIG,EAAEM,gBClCL,SAASC,EAAQ7C,GAAQ,IAAD,EACJiC,qBAAWpC,GAAnBI,GADY,EAC7BI,MAD6B,EACtBC,SADsB,EACZL,KADY,EAEXC,qBAFW,mBAE9BM,EAF8B,KAEvBG,EAFuB,OAGQD,IAHR,mBAGrBwB,GAHqB,WAGTtB,EAHS,KAI7BkC,GAJ6B,KAIjB9C,EAAZ8C,SA8BR,OAPA9B,qBAAU,WACJJ,GACFkC,EAAQC,WAGT,CAACnC,IAGF,yBAAKuB,UAAU,YACb,yBAAKA,UAAU,OAAM,0BAAMa,QA9BX,WAClBF,EAAQC,WA6Be,WACrB,0BAAME,SAvBW,SAACC,GACpBA,EAAIC,iBACJjB,EAAW,CACTjC,IAAI,GAAD,OAAKA,EAAL,SACHiB,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMgC,KAAKC,UAAU,CACnBd,GAAI,EACJK,QAASpC,QAgBT,8BAAU8C,KAAK,OAAOC,SA5BP,SAACL,GACpBvC,EAASuC,EAAIM,OAAOhD,QA2B8BA,MAAOA,IACrD,yBAAK2B,UAAU,UACb,4BAAQsB,KAAK,SAAStB,UAAU,UAAhC,cCvCK,SAASuB,EAAS1D,GAAQ,IAChC2D,EAAkB3D,EAAlB2D,MAAOb,EAAW9C,EAAX8C,QADwB,EAEfb,qBAAWpC,GAA1BQ,EAF8B,EAE9BA,MAAOJ,EAFuB,EAEvBA,IAFuB,EAGOS,IAHP,mBAGtBwB,GAHsB,WAGVtB,EAHU,KAIhC2B,GAJgC,KAI3BqB,OAAOD,EAAME,OAAOtB,KACzBuB,EAAWzD,EAAM0D,MAAK,SAAAzB,GAAC,OAAIA,EAAEC,KAAOA,KAoB1C,OAPAvB,qBAAU,WACJJ,GACFkC,EAAQC,WAGT,CAACnC,IAGF,oCACE,yBAAKuB,UAAU,YAAYK,IAAKsB,EAASvB,IACvC,kBAAC,IAAD,CAAMH,GAAG,IAAID,UAAU,aAAvB,QACA,yBAAKA,UAAU,oBACb,6BACE,uBAAGA,UAAU,QAAb,UACA,0BAAMA,UAAU,QACbM,IAAOqB,EAASpB,SAASC,aAIhC,yBAAKR,UAAU,qBACb,2BAAI2B,EAASlB,UAEf,yBAAKT,UAAU,oBACb,4BAAQA,UAAU,gBAAgBa,QAlCrB,SAACE,GACpBJ,EAAQkB,KAAR,wBAA8BzB,MAiCxB,QACA,4BAAQJ,UAAU,gBAAgBa,QA/BtB,SAACE,GACnBhB,EAAW,CACTjC,IAAI,GAAD,OAAKA,EAAL,iBAAiBsC,GACpBrB,OAAQ,aA4BJ,a,YC5CK,SAAS+C,EAAWjE,GAAQ,IAClC2D,EAAkB3D,EAAlB2D,MAAOb,EAAW9C,EAAX8C,QAD0B,EAEPb,qBAAWpC,GAApCQ,EAFgC,EAEhCA,MAAOC,EAFyB,EAEzBA,SAAUL,EAFe,EAEfA,IAFe,EAGdC,qBAHc,mBAGjCM,EAHiC,KAG1BG,EAH0B,OAIKD,IAJL,mBAIxBwB,GAJwB,WAIZtB,EAJY,KAKlC2B,GALkC,KAK7BqB,OAAOD,EAAME,OAAOtB,KAkC/B,OAXAvB,qBAAU,WACR,IAAM8C,EAAWzD,EAAM0D,MAAK,SAAAzB,GAAC,OAAIA,EAAEC,KAAOA,KAC1C5B,EAASmD,EAASlB,SAEdhC,IACFN,GAAS,SAAA4D,GAAQ,OAAIA,EAAS7B,KAAI,SAACyB,GAAD,OAAcA,EAASvB,KAAOA,EAAhB,eAAyBuB,EAAzB,CAAmClB,QAASpC,IAASsD,QACrGhB,EAAQC,YAGT,CAACnC,IAGF,yBAAKuB,UAAU,eACb,wCACA,yBAAKA,UAAU,OACb,0BAAMA,UAAU,QAAQa,QAhCV,WAClBF,EAAQC,WA+BJ,WAEF,0BAAME,SA9BW,SAACC,GACpBA,EAAIC,iBACJjB,EAAW,CACTjC,IAAI,GAAD,OAAKA,EAAL,SACHiB,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMgC,KAAKC,UAAU,CACnBd,KACAK,QAASpC,QAuBT,8BAAU8C,KAAK,OAAOC,SAvCP,SAACL,GACpBvC,EAASuC,EAAIM,OAAOhD,QAsC8BA,MAAOA,IACrD,yBAAK2B,UAAU,UACb,4BAAQsB,KAAK,SAAStB,UAAU,UAAhC,WCzBKgC,MAnBf,WAGE,OACE,kBAACpE,EAAD,CAAcE,IAHDmE,sCAIX,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,aAAaC,UAAWzB,IACpC,kBAAC,IAAD,CAAOwB,KAAK,oBAAoBC,UAAWL,IAC3C,kBAAC,IAAD,CAAOI,KAAK,aAAaC,UAAWZ,IACpC,kBAAC,IAAD,CAAOW,KAAK,IAAIC,UAAWtC,SChBvCuC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8d2c9c4c.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst PostsContext = createContext([]);\n\nexport default PostsContext;\n","import React, { useState } from 'react';\nimport PostsContext from '../PostsContext';\n\nexport default function PostProvider(props) {\n  const { url } = props;\n  const [advanced, setAdvanced] = useState(false);\n  const [posts, setPosts] = useState([]);\n  \n  return (\n    <PostsContext.Provider value={{advanced, setAdvanced, posts, setPosts, url}}>\n      {props.children}\n    </PostsContext.Provider>\n  )\n}\n","import {useState, useEffect} from 'react';\n\nexport default function useJsonFetch() {\n  const [value, setValue] = useState();\n  const [data, setData] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const { url, method, headers, body } = value;\n        const response = await fetch(url, {\n          method,\n          headers,\n          body,\n        });\n\n        if (!response.ok) {\n          console.log(response.status, response.body);\n          // eslint-disable-next-line no-undef\n          setError(response.statusText);\n        }\n\n        if (response.status === 204) {\n          setData({\n            resolve: '',\n            status: response.status,\n          });\n        } else {\n          const resolve = await response.json();\n          console.log(resolve);\n          setData({\n            resolve,\n            status: response.status,\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (value) {\n      fetchData();\n    }\n    console.log(data);  \n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  return [value, setValue, data, loading];\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport useJsonFetch from '../useJsonFetch'\nimport PostsContext from '../PostsContext';\n\nexport default function Posts(props) {\n  const { advanced, setAdvanced, url, posts, setPosts } = useContext(PostsContext);\n  const [request, setRequest, data] = useJsonFetch();\n\n  useEffect(() => {\n    if (!data) {\n      setRequest({\n        url: `${url}posts`,\n        method: 'GET',\n      });\n    }\n\n    if (data) {\n      setPosts(data.resolve);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  return (\n    <div>\n      <div className=\"main-top\">\n        <Link to=\"/posts/new\" className=\"button\">Create post</Link>\n      </div>\n      {data && data.resolve.map((o) =>\n        <Link to={`/posts/${o.id}`}>\n          <div className=\"item-post\" key={o.id}>\n            <div className=\"item-post-header\">\n              <div className=\"item-post-name\">\n                <span className=\"name\">Grudge</span>\n                <span className=\"time\">{moment(o.created).fromNow()}</span>\n              </div>\n            </div>\n            <div className=\"item-post-content\">\n              <p>{o.content}</p>\n            </div>\n          </div>\n        </Link>)}\n    </div>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useContext } from 'react';\nimport {Redirect} from 'react-router-dom';\nimport PostsContext from '../PostsContext';\nimport useJsonFetch from '../useJsonFetch';\n\nexport default function NewPost(props) {\n  const { posts, setPosts, url } = useContext(PostsContext);\n  const [value, setValue] = useState();\n  const [request, setRequest, data, loading] = useJsonFetch();\n  const { history } = props;\n\n  const handleClose = () => {\n    history.goBack();\n  };\n\n  const handleChange = (evt) => {\n    setValue(evt.target.value);\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setRequest({\n      url: `${url}posts`,\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        id: 0,\n        content: value,\n      }),\n    });\n  };\n\n  useEffect(() => {\n    if (data) {\n      history.goBack();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  return (\n    <div className=\"new-post\">\n      <div className=\"top\"><span onClick={handleClose}>&#x2716;</span></div>\n      <form onSubmit={handleSubmit}>\n        <textarea name=\"text\" onChange={handleChange} value={value} />\n        <div className=\"submit\">\n          <button type=\"submit\" className=\"button\">Publish</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport useJsonFetch from '../useJsonFetch';\nimport PostsContext from '../PostsContext';\n\nexport default function ItemPost(props) {\n  const {match, history} = props;\n  const { posts, url } = useContext(PostsContext);\n  const [request, setRequest, data, loading] = useJsonFetch();\n  const id = Number(match.params.id);\n  const itemPost = posts.find(o => o.id === id)\n\n  const handleChange = (evt) => {\n    history.push(`/posts/change/${id}`);\n  }\n\n  const handleRemove =(evt) => {\n    setRequest({\n      url: `${url}posts/${id}`,\n      method: 'DELETE',\n    });\n  }\n\n  useEffect(() => {\n    if (data) {\n      history.goBack();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  return (\n    <>\n      <div className=\"item-post\" key={itemPost.id}>\n        <Link to=\"/\" className=\"link-back\">Back</Link>\n        <div className=\"item-post-header\">\n          <div>\n            <p className=\"name\">Grudge</p>\n            <span className=\"time\">\n              {moment(itemPost.created).fromNow()}\n            </span>\n          </div>\n        </div>\n        <div className=\"item-post-content\">\n          <p>{itemPost.content}</p>\n        </div>\n        <div className=\"item-post-footer\">\n          <button className=\"change button\" onClick={handleChange}>Edit</button>\n          <button className=\"remove button\" onClick={handleRemove}>Delete</button>\n        </div>\n      </div>\n    </>\n  );\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useContext } from 'react';\nimport useJsonFetch from '../useJsonFetch';\nimport PostsContext from '../PostsContext';\n\nexport default function ChangePost(props) {\n  const {match, history} = props;\n  const { posts, setPosts, url } = useContext(PostsContext);\n  const [value, setValue] = useState();\n  const [request, setRequest, data, loading] = useJsonFetch();\n  const id = Number(match.params.id);\n\n  const handleChange = (evt) => {\n    setValue(evt.target.value);\n  }\n\n  const handleClose = () => {\n    history.goBack();\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setRequest({\n      url: `${url}posts`,\n      method: 'POST',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        id,\n        content: value,\n      }),\n    });\n  };\n\n  useEffect(() => {\n    const itemPost = posts.find(o => o.id === id);\n    setValue(itemPost.content);\n\n    if (data) {\n      setPosts(prevPost => prevPost.map((itemPost) => itemPost.id === id ? {...itemPost, content: value} : itemPost));\n      history.goBack();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data])\n\n  return (\n    <div className=\"change-post\">\n      <p>Edit post</p>\n      <div className=\"top\">\n        <span className=\"close\" onClick={handleClose}>&#x2716;</span>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <textarea name=\"text\" onChange={handleChange} value={value} />\n        <div className=\"submit\">\n          <button type=\"submit\" className=\"button\">Save</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport PostProvider from './components/PostProvider';\nimport Posts from './components/Posts';\nimport NewPost from './components/NewPost';\nimport ItemPost from './components/ItemPost';\nimport ChangePost from './components/ChangePost';\n\nfunction App() {\n  const urlEnv = process.env.REACT_APP_URL;\n\n  return (\n    <PostProvider url={urlEnv}>\n      <Router>\n        <div>\n          <Switch>\n            <Route path=\"/posts/new\" component={NewPost} />\n            <Route path=\"/posts/change/:id\" component={ChangePost} />\n            <Route path=\"/posts/:id\" component={ItemPost} />\n            <Route path=\"/\" component={Posts} />\n          </Switch>\n        </div>\n      </Router>\n    </PostProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}